{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8240\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Arrays son contenedores para uno o varios objetos.\
\
Si creamos una variable x y le asignamos el array [1,2,3,4], ahora x reprenda esta colecci\'f3n de valores.\
\
Queda impl\'edcito as\'ed que para crear un array necesitamos usar estos s\'edmbolos.\
\
Un array puede contener cualquier tipo de objeto, incluso otro array. No todos los miembros un array tienen que pertenecer a la misma clase.x \
\
x = [ 1, 2.0, "hola", \{10.postln\}, [1,2,3] ];\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\tx14012\tx14012\pardirnatural\partightenfactor0
\cf0 Los objetos dentro de un array puede ser accedido con un \'edndice, es decir, un n\'famero que describe la posici\'f3n del objeto en el array. \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\'a1Recuerda que en programaci\'f3n siempre contamos desde 0!\
\
x = [1,2,3,4]; // c\'f3mo acceder al primer objeto?\
x[0]; // el primer objeto tiene como \'edndice 0\
\
\'bfC\'f3mo acceder\'edas al n\'famero 4? Piensa\'85 \'bfen qu\'e9 indice est\'e1 el n\'famero 4?\
\
Existen varias formas en las que podemos crear un array. SuperCollider es un lenguaje muy vers\'e1til y conciso, usado para hacer m\'fasica en tiempo real. Abreviar instrucciones es altamente deseable en este contexto.\
\
Aqu\'ed algunas formas de crear un array cuyos miembros son los n\'fameros de 0 al 9. No es necesario que entiendas de momento como todo esto funciona, lo importante es saber que\
existen varias formas de hacer lo mismo en todo lenguaje de programaci\'f3n.\
\
x = [0,1,2,3,4,5,6,7,8,9]; // manualmente\
y = (0..9); // con un loop abreviado\
z = Array.fill(10,\{|i| i \}); // con un m\'e9todo de la clase Array\
w = 10.collect\{|i| i\}; // con un m\'e9todo de Collection\
t = Array(10) ; 10.do\{|i| t.add(i)\}; t; // con 3 instrucciones\
\
Veamos ahora algunos m\'e9todos de la clase Array\
\
x = [1,2,3];\
x.reverse;\
x.scramble\
x.pyramid\
x.mirror;\
x.stutter(2);\
x.rotate(1);\
x.wrapAt(3);\
\
No es necesario memorizar todos los m\'e9todos de una clase dada. Es mejor saber usar la documentaci\'f3n. Miremos por ejemplo los m\'e9todos existentes para la clase Array:\
\
Array\
\
Selecciona la palabra Array o asigna el cursor a uno de sus caracteres y presiona cmd + d\
\
Vemos ahora la p\'e1gina de ayuda para la clase Array. Si vamos a la secci\'f3n "Instance Methods" encontraremos todos m\'e9todos para una instancia de la clase Array, entre ellos, los que hemos visto ahora. Experimenta un poco con estos m\'e9todos y mira si puedes entender como funcionan.\
  \

\b Cambio de escena\
\

\b0 Ahora, \'bfqu\'e9 es una Clase y qu\'e9 es una Instancia?\
\
Una Clase, en pocas palabras, es la definici\'f3n abstracta en la que un objeto se basa.\
\
Una Instancia, en cambio, es uno de los objetos que pertenecen a una Clase.\
\
Por ejemplo, imaginemos un gato. \'bfCu\'e1les son los atributos generales de un gato? Es un felino de 4 patas, mam\'edfero, con una cola, dos orejas y bigotes. Esta es nuestra definici\'f3n de la clase "Gato". \
\
Ahora, una instancia de un gato puede ser uno de color blanco, mientras que otra instancia puede ser otro gato de color negro. Ambos comparten la misma definici\'f3n esencial de un Gato, pero tienen propiedades individuales.\
\
En programaci\'f3n orientada a objetos, como en SuperCollider, los objetos se modelan de acuerdo a este concepto.\
\

\b Cambio de escena (c\'f3digo)\
\

\b0 Volviendo al c\'f3digo. Vemos que cuando creamos:\
\
x = [1,2,3];\
\
x representa una instancia de la clase Array. Si creamos:\
\
y = [4,5,6];\
\
y representa otra instancia de la clase Array.\
\
La clase en s\'ed es:\
\
Array.\
\
Ahora, lo m\'e1s importante de entender en este momento es que existen m\'e9todos para Clases, y m\'e9todos para instancias de una clase. Por ejemplo, el m\'e9todo .series de la clase Array:\
\
Array.series(10,0,1); // Crea los n\'fameros del 0 al 9 \
[1,2,3].series(10,0,1); // Error, porque esta es una instancia de array, no la clase Array\
\
Usando los archivos de ayuda, puedes experimentar con m\'e9todos de Clase para Array\
y m\'e9todos para instancias.\
\
Usa cmd + d como hab\'edamos visto para acceder a los archivos de ayuda de un objeto determinado y experimenta un poco con los m\'e9todos descritos.\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}